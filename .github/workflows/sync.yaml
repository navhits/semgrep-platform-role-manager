name: "Sync users"

on:
  # schedule:
  #   - cron: "0 0 * * *"
  workflow_dispatch:

concurrency: sync

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: users
          token: ${{ secrets.GH_PAT }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'
    
      - name: Merge script branch into protected branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin main
          git checkout main

          git checkout users
          git checkout main -- .
          git checkout users -- data/users.json

      - name: Run sync script
        run: |
          # Sync users from Semgrep platform to GitHub
          python src/sync.py

          # Remove time based admins if their time has expired
          python src/expire.py
        env:
          SEMGREP_HOST: ${{ vars.SEMGREP_HOST }}
          SEMGREP_TOKEN: ${{ secrets.SEMGREP_TOKEN }}
          SEMGREP_DEPLOYMENT_ID: ${{ vars.SEMGREP_DEPLOYMENT_ID }}
          SEMGREP_DEFAULT_ADMIN_DAYS: ${{ vars.SEMGREP_DEFAULT_ADMIN_DAYS }}
          SEMGREP_HONOR_UKNONWN_PLATFORM_ADMIN: ${{ vars.SEMGREP_HONOR_UKNONWN_PLATFORM_ADMIN }}

      - name: Commit changes
        run: |
          git restore --staged .

          FILE="data/users.json"
          git add $FILE

          if git diff --cached --quiet "$FILE"; then
              echo "No user changes detected."
          else
              git commit -m "Update file via GitHub Actions"
              git push origin users
              echo "Updated users file."
          fi
